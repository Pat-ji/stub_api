static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: domain :: npc_definition :: RSNpcDefinition ; use crate :: api :: util :: cache :: cache_get_npc_definition ; use crate :: api :: varbits :: varbits_get_value ; use crate :: api :: varps :: varps_get_value ; use crate :: c_address :: CAddress ; use crate :: offsets ; use std :: collections :: HashMap ; static mut CACHE : Option < HashMap < i32 , RSNpcDefinition > > = None ; fn get_cache () -> & 'static mut HashMap < i32 , RSNpcDefinition > { unimplemented ! () } pub fn npc_definitions_for_id (id : i32) -> Option < RSNpcDefinition > { unimplemented ! () } pub (crate) fn npc_definitions_for_npc (npc : CAddress) -> Option < RSNpcDefinition > { unimplemented ! () } fn npc_definitions_transform (npc_definition : RSNpcDefinition) -> Option < RSNpcDefinition > { unimplemented ! () }