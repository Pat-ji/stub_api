static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: domain :: region :: RSRegion ; use crate :: c_address :: CAddress ; use crate :: offsets ; # [derive (PartialEq , Copy , Clone)] pub struct RSWorldView { address : CAddress } impl RSWorldView { pub (crate) fn new (address : CAddress) -> Self { unimplemented ! () } pub fn get_id (& self) -> i32 { unimplemented ! () } pub fn get_base_x (& self) -> i32 { unimplemented ! () } pub fn get_base_y (& self) -> i32 { unimplemented ! () } pub fn get_plane (& self) -> i32 { unimplemented ! () } pub fn get_region (& self) -> Option < RSRegion > { unimplemented ! () } pub (crate) fn get_ground_item_dequeues (& self) -> CAddress { unimplemented ! () } pub (crate) fn get_projectiles (& self) -> CAddress { unimplemented ! () } pub (crate) fn get_graphics_objects (& self) -> CAddress { unimplemented ! () } }