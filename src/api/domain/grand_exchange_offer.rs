static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: ui :: grand_exchange :: { ExchangeBox , ExchangeBoxStatus } ; use crate :: c_address :: CAddress ; use crate :: offsets ; # [derive (PartialEq)] pub struct RSGrandExchangeOffer { address : CAddress , exchange_box : ExchangeBox } impl RSGrandExchangeOffer { pub (crate) fn new (address : CAddress , exchange_box : ExchangeBox) -> Self { unimplemented ! () } pub fn get_exchange_box (& self) -> & ExchangeBox { unimplemented ! () } pub fn get_status (& self) -> ExchangeBoxStatus { unimplemented ! () } pub fn get_status_value (& self) -> u8 { unimplemented ! () } pub fn get_item_id (& self) -> i32 { unimplemented ! () } pub fn get_item_price (& self) -> i32 { unimplemented ! () } pub fn get_amount_to_transfer (& self) -> i32 { unimplemented ! () } pub fn get_amount_transferred (& self) -> i32 { unimplemented ! () } pub fn get_spent (& self) -> i32 { unimplemented ! () } }