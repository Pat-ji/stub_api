static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: def :: item_definitions :: item_definitions_for_id ; use crate :: api :: domain :: item_definition :: RSItemDefinition ; use crate :: api :: domain :: widget :: RSWidget ; # [derive (PartialEq)] pub struct Item { id : i32 , amount : i32 , owner : RSWidget , index : i32 } impl Item { pub fn new (id : i32 , amount : i32 , owner : RSWidget , index : i32) -> Self { unimplemented ! () } pub fn get_id (& self) -> i32 { unimplemented ! () } pub fn get_amount (& self) -> i32 { unimplemented ! () } pub fn get_owner (& self) -> & RSWidget { unimplemented ! () } pub fn get_index (& self) -> i32 { unimplemented ! () } pub fn get_name (& self) -> String { unimplemented ! () } pub fn get_actions (& self) -> Vec < String > { Vec :: new () } pub fn get_definition (& self) -> Option < RSItemDefinition > { unimplemented ! () } pub fn get_bounds (& self) -> (i32 , i32 , i32 , i32) { unimplemented ! () } pub fn hover (& self) -> bool { unimplemented ! () } pub fn click (& self , left : bool) -> bool { unimplemented ! () } pub fn interact (& self , action : & str) -> bool { unimplemented ! () } pub fn interact_any (& self , actions : & [& str]) -> bool { unimplemented ! () } }