static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: c_address :: CAddress ; use crate :: offsets ; # [derive (PartialEq , Copy , Clone)] pub struct RSAnimable { address : CAddress } pub trait Animable : { fn get_animable (& self) -> & RSAnimable ; fn get_model_height (& self) -> i32 { unimplemented ! () } } impl RSAnimable { pub (crate) fn new (address : CAddress) -> Self { unimplemented ! () } }