static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: domain :: dynamic_object :: RSDynamicObject ; use crate :: api :: domain :: entity :: { Entity , EntityImpl , EntityType } ; use crate :: api :: domain :: object :: Object ; use crate :: api :: domain :: world_view :: RSWorldView ; use crate :: api :: scene :: entities :: entities_exists ; use crate :: api :: scene :: objects :: OBJECTS_WALL_DECORATION_FLAG ; use crate :: api :: util :: projection :: bounding_box :: { bounding_box_calculate_bounding_box_wh , BoundingBox } ; use crate :: c_address :: CAddress ; use crate :: offsets ; # [derive (PartialEq , Copy , Clone)] pub struct RSWallDecoration { address : CAddress , world_view : RSWorldView } impl Entity for RSWallDecoration { fn get_type (& self) -> EntityType { unimplemented ! () } fn get_x (& self) -> i32 { unimplemented ! () } fn get_y (& self) -> i32 { unimplemented ! () } fn get_local_x (& self) -> i32 { unimplemented ! () } fn get_local_y (& self) -> i32 { unimplemented ! () } fn get_size_x (& self) -> i32 { unimplemented ! () } fn get_size_y (& self) -> i32 { unimplemented ! () } fn get_grid_x (& self) -> i32 { unimplemented ! () } fn get_grid_y (& self) -> i32 { unimplemented ! () } fn get_height (& self) -> i32 { unimplemented ! () } fn get_world_view (& self) -> & RSWorldView { unimplemented ! () } fn get_actions (& self) -> Vec < String > { Vec :: new () } fn exists (& self) -> bool { unimplemented ! () } fn get_bounding_box (& self) -> BoundingBox { unimplemented ! () } } impl Object for RSWallDecoration { fn get_uuid (& self) -> i64 { unimplemented ! () } fn get_config (& self) -> i32 { unimplemented ! () } fn get_type_flag (& self) -> i32 { unimplemented ! () } fn get_dynamic_object (& self) -> Option < RSDynamicObject > { unimplemented ! () } } impl RSWallDecoration { pub (crate) fn new (address : CAddress , world_view : RSWorldView) -> Self { unimplemented ! () } fn _get_x (& self) -> i32 { unimplemented ! () } fn _get_y (& self) -> i32 { unimplemented ! () } fn get_offset_x (& self) -> i32 { unimplemented ! () } fn get_offset_y (& self) -> i32 { unimplemented ! () } fn get_secondary_dynamic_object (& self) -> Option < RSDynamicObject > { unimplemented ! () } }