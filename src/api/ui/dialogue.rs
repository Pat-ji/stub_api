static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: domain :: widget :: RSWidget ; use crate :: api :: input :: keyboard :: keyboard_type_string ; use crate :: api :: script :: script_state :: { script_get_state , ScriptState } ; use crate :: api :: ui :: widgets :: { widgets_get_sub_widget , widgets_get_widget } ; use crate :: api :: util :: find_args :: NameArgs ; use crate :: api :: util :: random :: random_from_normal ; use crate :: api :: util :: utils :: utils_sleep ; const DIALOGUE_NPC_DIALOGUE_CONTAINER_WIDGET_ID : i32 = 231 ; const DIALOGUE_PLAYER_DIALOGUE_CONTAINER_WIDGET_ID : i32 = 217 ; const DIALOGUE_CLICK_TO_CONTINUE_WIDGET_CHILD_ID : i32 = 5 ; const DIALOGUE_TEXT_WIDGET_CHILD_ID : i32 = 6 ; const DIALOGUE_OPTION_CONTAINER_WIDGET_ID : i32 = 219 ; const DIALOGUE_OPTION_WIDGET_CHILD_ID : i32 = 1 ; pub fn dialogue_is_in_dialogue () -> bool { unimplemented ! () } pub fn dialogue_get_text_widget () -> Option < RSWidget > { unimplemented ! () } pub fn dialogue_get_continue_widget () -> Option < RSWidget > { unimplemented ! () } pub fn dialogue_get_options_widget () -> Option < RSWidget > { unimplemented ! () } pub fn dialogue_get_options_count () -> i32 { unimplemented ! () } pub fn dialogue_is_pending_continuation () -> bool { unimplemented ! () } pub fn dialogue_is_pending_option () -> bool { unimplemented ! () } pub fn dialogue_click_continue () -> bool { unimplemented ! () } pub fn dialogue_select_option < T : Into < NameArgs > > (args : T) -> bool { unimplemented ! () } pub fn dialogue_get_options () -> impl Iterator < Item = String > { std :: iter :: empty () } fn dialogue_get_option_widget (option : i32) -> Option < RSWidget > { unimplemented ! () } pub fn dialogue_select_option_index (option : i32) -> bool { unimplemented ! () } pub fn dialogue_complete_dialogue < T : Into < NameArgs > + Clone > (args : T) -> bool { unimplemented ! () }