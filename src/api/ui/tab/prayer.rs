static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: ui :: minimap :: MINIMAP_WIDGET_ID ; use crate :: api :: ui :: tab :: skills :: { skills_get_max_level , Skill } ; use crate :: api :: ui :: tab :: tabs :: { tabs_open_tab , Tab } ; use crate :: api :: ui :: widgets :: widgets_get_widget ; use crate :: api :: util :: utils :: utils_sleep_conditional ; use crate :: api :: varps :: varps_get_value ; use strum :: IntoEnumIterator ; use strum_macros :: EnumIter ; const PRAYER_QUICK_PRAYER_ACTIVE_VARP : i32 = 375 ; const PRAYER_ACTIVE_PRAYERS_VARP : i32 = 83 ; const PRAYER_WIDGET_ID : i32 = 541 ; const PRAYER_QUICK_PRAYER_CHILD_WIDGET_ID : i32 = 19 ; pub fn prayer_is_quick_prayer_active () -> bool { unimplemented ! () } pub fn prayer_has_required_level (prayer : & Prayer) -> bool { unimplemented ! () } pub fn prayer_is_activated (prayer : & Prayer) -> bool { unimplemented ! () } pub fn prayer_toggle_prayer (prayer : & Prayer , active : bool) -> bool { unimplemented ! () } pub fn prayer_toggle_quick_prayer (active : bool) -> bool { unimplemented ! () } pub fn prayer_deactivate_all () -> bool { unimplemented ! () } # [derive (Debug , PartialEq , Copy , Clone , EnumIter)] pub enum Prayer { ThickSkin , BurstOfStrength , ClarityOfThought , SharpEye , MysticWill , RockSkin , SuperhumanStrength , ImprovedReflexes , RapidRestore , RapidHeal , ProtectItem , HawkEye , MysticLore , SteelSkin , UltimateStrength , IncredibleReflexes , ProtectFromMagic , ProtectFromMissiles , ProtectFromMelee , EagleEye , MysticMight , Retribution , Redemption , Smite , Chivalry , Piety , Preserve , Rigour , Augury , } impl Prayer { pub fn get_mask (& self) -> i32 { unimplemented ! () } pub fn get_level (& self) -> i32 { unimplemented ! () } pub fn get_widget_id (& self) -> i32 { unimplemented ! () } }