static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: scene :: players :: players_get_local_player ; use crate :: api :: ui :: minimap :: { MINIMAP_SPECIAL_ATTACK_CHILD_WIDGET_ID , MINIMAP_WIDGET_ID } ; use crate :: api :: ui :: tab :: skills :: { skills_get_current_level , skills_get_max_level , Skill } ; use crate :: api :: ui :: tab :: tabs :: { tabs_open_tab , Tab } ; use crate :: api :: ui :: widgets :: widgets_get_widget ; use crate :: api :: util :: utils :: utils_sleep_conditional ; use crate :: api :: varps :: varps_get_value ; const COMBAT_SPECIAL_ATTACK_PERCENTAGE_VARP : i32 = 300 ; const COMBAT_SPECIAL_ATTACK_ACTIVATED_VARP : i32 = 301 ; const COMBAT_AUTO_RETALIATE_ACTIVATED_VARP : i32 = 172 ; const COMBAT_HEALTH_STATUS_VARP : i32 = 102 ; const COMBAT_HEALTH_DISEASED_VARP : i32 = 456 ; const COMBAT_WIDGET_ID : i32 = 593 ; const COMBAT_AUTO_RETALIATE_CHILD_WIDGET_ID : i32 = 31 ; const COMBAT_SPECIAL_ATTACK_CHILD_WIDGET_ID : i32 = 38 ; pub fn combat_get_health () -> i32 { unimplemented ! () } pub fn combat_get_health_percentage () -> i32 { unimplemented ! () } pub fn combat_get_combat_level () -> i32 { unimplemented ! () } pub fn combat_get_special_attack_percentage () -> i32 { unimplemented ! () } pub fn combat_is_special_attack_activated () -> bool { unimplemented ! () } pub fn combat_is_auto_retaliate_activated () -> bool { unimplemented ! () } pub fn combat_is_poisoned () -> bool { unimplemented ! () } pub fn combat_is_venomed () -> bool { unimplemented ! () } pub fn combat_is_poison_immune () -> bool { unimplemented ! () } pub fn combat_is_diseased () -> bool { unimplemented ! () } pub fn combat_toggle_auto_retaliate (active : bool) -> bool { unimplemented ! () } pub fn combat_toggle_special_attack (active : bool) -> bool { unimplemented ! () }