static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: varbits :: varbits_get_varbit_value ; use strum_macros :: EnumIter ; pub fn diaries_is_completed (diary : & Diary) -> bool { unimplemented ! () } # [derive (Debug , PartialEq , Copy , Clone , EnumIter)] pub enum Diary { KaramjaEasy , KaramjaMedium , KaramjaHard , KaramjaElite , ArdougneEasy , ArdougneMedium , ArdougneHard , ArdougneElite , FaladorEasy , FaladorMedium , FaladorHard , FaladorElite , WildernessEasy , WildernessMedium , WildernessHard , WildernessElite , WesternEasy , WesternMedium , WesternHard , WesternElite , KandarinEasy , KandarinMedium , KandarinHard , KandarinElite , VarrockEasy , VarrockMedium , VarrockHard , VarrockElite , DesertEasy , DesertMedium , DesertHard , DesertElite , MorytaniaEasy , MorytaniaMedium , MorytaniaHard , MorytaniaElite , FremennikEasy , FremennikMedium , FremennikHard , FremennikElite , LumbridgeEasy , LumbridgeMedium , LumbridgeHard , LumbridgeElite , KourendEasy , KourendMedium , KourendHard , KourendElite , } impl Diary { pub fn get_varbit (& self) -> (i32 , i32 , i32) { unimplemented ! () } }