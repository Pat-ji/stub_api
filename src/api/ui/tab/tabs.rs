static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: display :: { display_get_root_widget_id , display_get_root_widget_index } ; use crate :: api :: domain :: widget :: RSWidget ; use crate :: api :: input :: keyboard :: { keyboard_type_escape , keyboard_type_f_key } ; use crate :: api :: ui :: bank :: bank_is_open ; use crate :: api :: ui :: widgets :: widgets_get_widget ; use crate :: api :: util :: utils :: utils_sleep_conditional ; use crate :: api :: varps :: varps_get_value ; use strum :: IntoEnumIterator ; use strum_macros :: EnumIter ; pub fn tabs_get_tab_widget (tab : & Tab) -> Option < RSWidget > { unimplemented ! () } pub fn tabs_get_current_tab () -> Tab { unimplemented ! () } pub fn tabs_is_tab_open (tab : & Tab) -> bool { unimplemented ! () } pub fn tabs_open_tab (tab : & Tab) -> bool { unimplemented ! () } pub fn tabs_get_keybind_key (tab : & Tab) -> i32 { unimplemented ! () } fn tabs_get_keybind_varp (tab : & Tab) -> i32 { unimplemented ! () } fn tabs_get_keybind_shift (tab : & Tab) -> i32 { unimplemented ! () } # [derive (Debug , Copy , Clone , PartialEq , EnumIter)] pub enum Tab { Attack , Skills , Quests , Inventory , Equipment , Prayer , Magic , Grouping , Friends , AccountManagement , Logout , Settings , Emotes , Music , None , } impl Tab { pub fn get_child_ids (& self) -> & [i32 ; 3] { unimplemented ! () } }