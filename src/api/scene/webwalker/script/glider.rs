static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: domain :: entity :: Entity ; use crate :: api :: scene :: coords :: position :: Position ; use crate :: api :: scene :: npcs :: npcs_find_closest_by_name ; use crate :: api :: scene :: players :: players_get_local_player ; use crate :: api :: scene :: webwalker :: web_player_profile :: WebPlayerProfile ; use crate :: api :: scene :: webwalker :: web_script :: WebScript ; use crate :: api :: ui :: dialogue :: { dialogue_complete_dialogue , dialogue_is_in_dialogue } ; use crate :: api :: ui :: tab :: quests :: Quest ; use crate :: api :: ui :: widgets :: { widgets_find_widget , widgets_is_root_visible } ; use crate :: api :: util :: utils :: utils_sleep_conditional ; use rustc_hash :: FxHashMap ; pub (in crate :: api :: scene :: webwalker) fn glider_load_all (result : & mut FxHashMap < (i32 , i32 , i32) , Vec < WebScript > >) { { } } fn glider_load < C : Fn (& WebPlayerProfile) -> bool + 'static > (from : Position , target : Position , name : & str , npc_action : & str , widget_action : & str , condition : C , result : & mut FxHashMap < (i32 , i32 , i32) , Vec < WebScript > >) { { } }