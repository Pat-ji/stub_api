static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: domain :: entity :: Entity ; use crate :: api :: scene :: coords :: position :: Position ; use crate :: api :: scene :: objects :: { objects_find_at_position_conditional , OBJECTS_INTERACTABLE_OBJECT_FLAG } ; use crate :: api :: scene :: players :: players_get_local_player ; use crate :: api :: scene :: webwalker :: web_script :: WebScript ; use crate :: api :: ui :: tab :: diaries :: Diary ; use crate :: api :: ui :: tab :: quests :: Quest ; use crate :: api :: ui :: widgets :: { widgets_get_widget , widgets_is_root_visible } ; use crate :: api :: util :: random :: random_between ; use crate :: api :: util :: utils :: { utils_sleep , utils_sleep_conditional } ; use crate :: api :: varps :: varps_get_value ; use rustc_hash :: FxHashMap ; use strum :: IntoEnumIterator ; use strum_macros :: EnumIter ; # [derive (PartialEq , Copy , Clone , EnumIter)] enum FairyRing { MudskipperPoint , SouthEastArdougne , DorgeshKaan , Rellekka , PinguinsMiscellania , PiscatorisHunterArea , FeldipHunterArea , Lighthouse , HauntedWoods , Abyss , McgruborWood , MortMyre , KharidianDesert , ArdougneZoo , RealmOfTheFisherKing , ZulAndra , CastleWars , EnchantedValley , MortMyreSwamp , Zanaris , Tzhaar , LegendsGuild , Miscellania , Yanille , ArceuusLibrary , SinclairMansionEast , CosmicEntityPlane , TaiBwoWannaiVillage , Canafis , DraynorVillage , ApeAtoll , HazelmereHome , AbyssalNexus , GoraksPlane , WizardsTower , TowerOfLife , ChasmOfFire , MusaPoint , Edgeville , Keldagrim , Nardah , Isafdar , MyrequeHideout , MountKaruulm , IsleOfSouls , MountQuidamortem , HosidiusVinery , VarlamoreHunterArea , VarlamoreAldarin , } impl FairyRing { fn get_code (& self) -> & str { unimplemented ! () } fn get_position (& self) -> Position { unimplemented ! () } } fn get_config (c : char) -> i32 { unimplemented ! () } fn get_ring_config (ring : i32) -> i32 { unimplemented ! () } fn get_next_ring (to_fairy_ring : & FairyRing) -> i32 { unimplemented ! () } pub (in crate :: api :: scene :: webwalker) fn fairy_ring_load_all (result : & mut FxHashMap < (i32 , i32 , i32) , Vec < WebScript > >) { { } } fn fairy_ring_load (from_fairy_ring : FairyRing , result : & mut FxHashMap < (i32 , i32 , i32) , Vec < WebScript > >) { { } }