static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use crate :: api :: client :: { client_get_account_type , client_is_member , AccountType } ; use crate :: api :: domain :: item :: Item ; use crate :: api :: scene :: map :: map_get_wilderness_level ; use crate :: api :: ui :: tab :: combat :: combat_get_combat_level ; use crate :: api :: ui :: tab :: diaries :: { diaries_is_completed , Diary } ; use crate :: api :: ui :: tab :: equipment :: equipment_get_items ; use crate :: api :: ui :: tab :: inventory :: inventory_get_items ; use crate :: api :: ui :: tab :: magic :: { magic_get_current_book , Book } ; use crate :: api :: ui :: tab :: quests :: { quests_is_completed , quests_is_started , Quest } ; use crate :: api :: ui :: tab :: skills :: { skills_get_experiences , skills_get_virtual_level_for_experience , Skill } ; use crate :: api :: varps :: varps_get_varps ; use strum :: IntoEnumIterator ; # [derive (Debug)] struct WebPlayerProfileItem { id : i32 , name : String , amount : i32 } impl WebPlayerProfileItem { fn new (item : & Item) -> Self { unimplemented ! () } } pub (crate) struct WebPlayerProfile { members : bool , account_type : AccountType , combat_level : i32 , spell_book : Book , skill_experience : Vec < i32 > , completed_quests : Vec < Quest > , started_quests : Vec < Quest > , completed_diaries : Vec < Diary > , wilderness_level : i32 , varps : Vec < i32 > , inventory_items : Vec < WebPlayerProfileItem > , equipment_items : Vec < WebPlayerProfileItem > } impl WebPlayerProfile { pub (crate) fn load_from_api () -> Self { unimplemented ! () } pub (crate) fn is_member (& self) -> bool { unimplemented ! () } pub (crate) fn get_account_type (& self) -> & AccountType { unimplemented ! () } pub (crate) fn get_combat_level (& self) -> i32 { unimplemented ! () } pub (crate) fn get_spell_book (& self) -> & Book { unimplemented ! () } pub (crate) fn get_varp_value (& self , varp : i32) -> i32 { unimplemented ! () } pub (crate) fn get_wilderness_level (& self) -> i32 { unimplemented ! () } pub (crate) fn get_skill_level (& self , skill : & Skill) -> i32 { unimplemented ! () } pub (crate) fn is_quest_completed (& self , quest : & Quest) -> bool { unimplemented ! () } pub (crate) fn is_quest_started (& self , quest : & Quest) -> bool { unimplemented ! () } pub (crate) fn is_diary_completed (& self , diary : & Diary) -> bool { unimplemented ! () } pub (crate) fn get_inventory_amount_by_id (& self , id : i32) -> i32 { unimplemented ! () } pub (crate) fn get_inventory_amount_by_name (& self , name : & str) -> i32 { unimplemented ! () } pub (crate) fn contains_inventory_by_name_contains (& self , name : & str) -> bool { unimplemented ! () } pub (crate) fn contains_inventory_by_name (& self , name : & str) -> bool { unimplemented ! () } pub (crate) fn contains_equipment_by_name_contains (& self , name : & str) -> bool { unimplemented ! () } pub (crate) fn contains_equipment_by_name (& self , name : & str) -> bool { unimplemented ! () } }