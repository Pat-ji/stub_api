static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; pub trait Interactable : { fn get_central_point (& self) -> (i32 , i32) ; fn get_interaction_point (& self) -> (i32 , i32) ; fn is_visible (& self) -> bool ; } pub struct InteractArgs { min_camera_distance : i32 , walk_to : bool , move_camera : bool , } impl Default for InteractArgs { fn default () -> Self { unimplemented ! () } } impl InteractArgs { pub fn set_min_camera_distance (& mut self , min_camera_distance : i32) -> & mut InteractArgs { unimplemented ! () } pub fn set_walk_to (& mut self , walk_to : bool) -> & mut InteractArgs { unimplemented ! () } pub fn set_move_camera (& mut self , move_camera : bool) -> & mut InteractArgs { unimplemented ! () } pub fn get_min_camera_distance (& self) -> i32 { unimplemented ! () } pub fn get_walk_to (& self) -> bool { unimplemented ! () } pub fn get_move_camera (& self) -> bool { unimplemented ! () } }