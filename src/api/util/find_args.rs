static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; # [derive (Clone)] pub struct IdArgs { pub ids : Vec < i32 > , } impl From < i32 > for IdArgs { fn from (value : i32) -> Self { unimplemented ! () } } impl From < & [i32] > for IdArgs { fn from (values : & [i32]) -> Self { unimplemented ! () } } impl From < Vec < i32 > > for IdArgs { fn from (values : Vec < i32 >) -> Self { unimplemented ! () } } impl From < & Vec < i32 > > for IdArgs { fn from (values : & Vec < i32 >) -> Self { unimplemented ! () } } # [derive (Clone)] pub struct NameArgs { pub names : Vec < String > , } impl From < & str > for NameArgs { fn from (value : & str) -> Self { unimplemented ! () } } impl From < & [& str] > for NameArgs { fn from (values : & [& str]) -> Self { unimplemented ! () } } impl From < Vec < & str > > for NameArgs { fn from (values : Vec < & str >) -> Self { unimplemented ! () } } impl From < String > for NameArgs { fn from (value : String) -> Self { unimplemented ! () } } impl From < Vec < String > > for NameArgs { fn from (values : Vec < String >) -> Self { unimplemented ! () } } impl From < & Vec < String > > for NameArgs { fn from (values : & Vec < String >) -> Self { unimplemented ! () } }