static EMPTY_VEC_I8 : Vec < i8 > = vec ! [] ; static EMPTY_VEC_I32 : Vec < i32 > = vec ! [] ; use std :: collections :: { HashMap , VecDeque } ; # [derive (Debug)] pub struct LruCache < V > { map : HashMap < i32 , V > , order : VecDeque < i32 > , capacity : usize , } impl < V > LruCache < V > { pub fn new (capacity : usize) -> Self { unimplemented ! () } pub fn clear (& mut self) { { } } pub fn get (& mut self , key : & i32) -> Option < & V > { unimplemented ! () } pub fn insert (& mut self , key : i32 , value : V) { { } } }